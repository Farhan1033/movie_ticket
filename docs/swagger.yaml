basePath: /api/v1
definitions:
  internal_reservation_module_handler.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  internal_reservation_module_handler.ReservationResponse:
    properties:
      created_at:
        type: string
      expires_at:
        type: string
      id:
        type: string
      schedule_id:
        type: string
      seats:
        items:
          type: string
        type: array
      status:
        type: string
      total_price:
        type: integer
      user_id:
        type: string
    type: object
  internal_reservation_module_handler.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  movie-ticket_internal_auth_module_dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  movie-ticket_internal_auth_module_dto.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        maxLength: 100
        minLength: 1
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
      phone_number:
        maxLength: 13
        minLength: 1
        type: string
      role:
        type: string
    required:
    - email
    - full_name
    - password
    - phone_number
    - role
    type: object
  movie-ticket_internal_movie_module_dto.CreateMovieRequest:
    properties:
      description:
        maxLength: 200
        minLength: 1
        type: string
      duration_minutes:
        maximum: 600
        minimum: 1
        type: integer
      genre:
        maxLength: 100
        minLength: 1
        type: string
      poster_url:
        type: string
      rating:
        enum:
        - G
        - PG
        - PG-13
        - R
        - NC-17
        type: string
      title:
        maxLength: 200
        minLength: 1
        type: string
    required:
    - description
    - duration_minutes
    - genre
    - poster_url
    - rating
    - title
    type: object
  movie-ticket_internal_movie_module_dto.MoviesResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  movie-ticket_internal_movie_module_dto.StatusMovieRequest:
    properties:
      status_movie:
        type: boolean
    type: object
  movie-ticket_internal_movie_module_dto.UpdateMovieRequest:
    properties:
      description:
        maxLength: 200
        minLength: 1
        type: string
      duration_minutes:
        maximum: 600
        minimum: 1
        type: integer
      genre:
        maxLength: 100
        minLength: 1
        type: string
      poster_url:
        type: string
      rating:
        enum:
        - G
        - PG
        - PG-13
        - R
        - NC-17
        type: string
      title:
        maxLength: 200
        minLength: 1
        type: string
    type: object
  movie-ticket_internal_reservation_module_dto.CreateReservationRequest:
    properties:
      schedule_id:
        type: string
      seats:
        items:
          type: string
        type: array
      total_price:
        type: integer
    required:
    - schedule_id
    - seats
    - total_price
    type: object
  movie-ticket_internal_schedule_module_dto.MessageResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  movie-ticket_internal_schedule_module_dto.ScheduleCreateRequest:
    properties:
      created_at:
        type: string
      end_time:
        type: string
      id:
        type: string
      movie_id:
        type: string
      price:
        maximum: 255
        minimum: 1
        type: integer
      start_time:
        type: string
      studio_id:
        type: string
      updated_at:
        type: string
    required:
    - created_at
    - end_time
    - id
    - movie_id
    - price
    - start_time
    - studio_id
    - updated_at
    type: object
  movie-ticket_internal_schedule_module_dto.ScheduleUpdateRequest:
    properties:
      end_time:
        type: string
      movie_id:
        type: string
      price:
        maximum: 255
        minimum: 1
        type: integer
      start_time:
        type: string
      studio_id:
        type: string
      updated_at:
        type: string
    type: object
  movie-ticket_internal_studio_module_dto.CreateStudioRequest:
    properties:
      location:
        minLength: 1
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
      seat_capacity:
        maximum: 600
        minimum: 1
        type: integer
    required:
    - location
    - name
    - seat_capacity
    type: object
  movie-ticket_internal_studio_module_dto.UpdateStudioRequest:
    properties:
      location:
        minLength: 1
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
      seat_capacity:
        maximum: 600
        minimum: 1
        type: integer
    type: object
host: movieticket-farhan10335643-qxvhtr05.leapcell.dev
info:
  contact: {}
  description: Dokumentasi API untuk aplikasi Movie Ticket
  title: Movie Ticket API
  version: "1.0"
paths:
  /admin/movie/{id}/status:
    patch:
      consumes:
      - application/json
      description: Mengubah status movie (aktif/non-aktif) berdasarkan ID. Hanya admin
        yang dapat mengakses endpoint ini
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Movie ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Movie status data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_movie_module_dto.StatusMovieRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Status movie berhasil diupdate
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid request body, movie ID, input, atau session
            failed
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Movie tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update status movie (Admin only)
      tags:
      - Movies
  /admin/movie/create:
    post:
      consumes:
      - application/json
      description: Membuat movie baru dengan informasi lengkap. Hanya admin yang dapat
        mengakses endpoint ini
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Movie creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_movie_module_dto.CreateMovieRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Movie created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid input, session, atau poster URL
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict - Movie sudah ada
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Membuat movie baru (Admin only)
      tags:
      - Movies
  /admin/movie/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Menghapus movie berdasarkan ID. Hanya admin yang dapat mengakses
        endpoint ini
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Movie ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Movie deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid movie ID atau session failed
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict - Movie tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Hapus movie (Admin only)
      tags:
      - Movies
  /admin/movie/update/{id}:
    put:
      consumes:
      - application/json
      description: Mengupdate informasi movie yang sudah ada. Hanya admin yang dapat
        mengakses endpoint ini
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Movie ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Movie update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_movie_module_dto.UpdateMovieRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Movie updated successfully
          schema:
            $ref: '#/definitions/movie-ticket_internal_movie_module_dto.MoviesResponse'
        "400":
          description: Bad Request - Invalid input, session, poster URL, atau movie
            ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict - Movie sudah ada
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update movie (Admin only)
      tags:
      - Movies
  /admin/schedule/create:
    post:
      consumes:
      - application/json
      description: Membuat jadwal tayang baru untuk movie tertentu dengan studio,
        waktu, dan harga yang ditentukan. Hanya admin yang dapat mengakses endpoint
        ini
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Schedule creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_schedule_module_dto.ScheduleCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Schedule created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid input, waktu mulai, movie tidak aktif,
            atau harga invalid
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Movie tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict - Jadwal bertabrakan dengan jadwal lain
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Membuat jadwal tayang baru (Admin only)
      tags:
      - Schedules
  /admin/schedule/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Menghapus jadwal tayang berdasarkan ID. Hanya admin yang dapat
        mengakses endpoint ini
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Schedule ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Schedule deleted successfully
          schema:
            $ref: '#/definitions/movie-ticket_internal_schedule_module_dto.MessageResponse'
        "400":
          description: Bad Request - Invalid schedule ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Jadwal tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Hapus jadwal tayang (Admin only)
      tags:
      - Schedules
  /admin/schedule/update/{id}:
    put:
      consumes:
      - application/json
      description: Mengupdate informasi jadwal tayang yang sudah ada. Hanya admin
        yang dapat mengakses endpoint ini
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Schedule ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Schedule update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_schedule_module_dto.ScheduleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Schedule updated successfully
          schema:
            $ref: '#/definitions/movie-ticket_internal_schedule_module_dto.MessageResponse'
        "400":
          description: Bad Request - Invalid input, schedule ID, waktu mulai, atau
            harga
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Jadwal tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict - Jadwal bertabrakan dengan jadwal lain
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update jadwal tayang (Admin only)
      tags:
      - Schedules
  /admin/studio/create:
    post:
      consumes:
      - application/json
      description: Membuat studio baru dengan informasi nama, kapasitas, dan tipe.
        Hanya admin yang dapat mengakses endpoint ini
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Studio creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_studio_module_dto.CreateStudioRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Studio created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "406":
          description: Not Acceptable - Studio sudah ada
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Membuat studio baru (Admin only)
      tags:
      - Studios
  /admin/studio/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Menghapus studio berdasarkan ID. Hanya admin yang dapat mengakses
        endpoint ini. Studio yang masih memiliki jadwal aktif tidak dapat dihapus
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Studio ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Studio deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid input atau studio ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Studio tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error - Database error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Hapus studio (Admin only)
      tags:
      - Studios
  /admin/studio/update/{id}:
    put:
      consumes:
      - application/json
      description: Mengupdate informasi studio yang sudah ada. Hanya admin yang dapat
        mengakses endpoint ini
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Studio ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Studio update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_studio_module_dto.UpdateStudioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Studio updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid input atau studio ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - User bukan admin
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Studio tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error - Database error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update studio (Admin only)
      tags:
      - Studios
  /login:
    post:
      consumes:
      - application/json
      description: Masuk akun dengan email & password untuk mendapatkan access token
      parameters:
      - description: Login Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_auth_module_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login berhasil dengan token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid input atau session gagal
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Password salah
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Email tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - Auth
  /logout:
    post:
      consumes:
      - application/json
      description: Keluar dari akun dan invalidate token yang aktif
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Logged out successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid authorization header
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - Auth
  /movie:
    get:
      consumes:
      - application/json
      description: Mengambil daftar semua movie yang tersedia dengan dukungan pagination
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: Nomor halaman
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Jumlah data per halaman
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Data movie berhasil diambil
          schema:
            $ref: '#/definitions/movie-ticket_internal_movie_module_dto.MoviesResponse'
        "404":
          description: Movie tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mendapatkan daftar movie dengan pagination
      tags:
      - Movies
  /movie/{id}:
    get:
      consumes:
      - application/json
      description: Mengambil informasi lengkap movie berdasarkan ID yang diberikan
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Movie ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Detail movie berhasil diambil
          schema:
            $ref: '#/definitions/movie-ticket_internal_movie_module_dto.MoviesResponse'
        "400":
          description: Bad Request - Invalid movie ID atau movie tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mendapatkan detail movie berdasarkan ID
      tags:
      - Movies
  /refresh:
    post:
      consumes:
      - application/json
      description: Mendapatkan access token baru menggunakan token yang masih valid
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid authorization header
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Token expired atau invalid
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Refresh access token
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Membuat akun baru dengan email & password
      parameters:
      - description: Register Data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_auth_module_dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Account created successfully
          schema:
            additionalProperties: true
            type: object
        "302":
          description: Found - Email sudah ada
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Email not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register user baru
      tags:
      - Auth
  /reservation/{id}:
    get:
      consumes:
      - application/json
      description: Mengambil informasi lengkap reservasi termasuk detail kursi, status,
        dan waktu expired
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Reservation ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Reservation retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/internal_reservation_module_handler.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/internal_reservation_module_handler.ReservationResponse'
              type: object
        "400":
          description: Bad Request - Missing atau invalid reservation ID
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
        "404":
          description: Not Found - Reservation tidak ditemukan
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Mendapatkan detail reservasi berdasarkan ID
      tags:
      - Reservations
  /reservation/{id}/cancel:
    put:
      consumes:
      - application/json
      description: Membatalkan reservasi yang sebelumnya dibuat. Kursi yang dibatalkan
        akan kembali tersedia
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Reservation ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Reservation canceled successfully
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.SuccessResponse'
        "400":
          description: Bad Request - Invalid reservation ID atau invalid status transition
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
        "404":
          description: Not Found - Reservation tidak ditemukan
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Membatalkan reservasi tiket
      tags:
      - Reservations
  /reservation/{id}/confirm:
    put:
      consumes:
      - application/json
      description: Mengkonfirmasi reservasi yang sebelumnya dibuat. Reservasi harus
        dalam status pending dan belum expired
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Reservation ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Reservation confirmed successfully
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.SuccessResponse'
        "400":
          description: Bad Request - Invalid reservation ID, invalid status transition,
            atau reservation expired
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
        "404":
          description: Not Found - Reservation tidak ditemukan
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Konfirmasi reservasi tiket
      tags:
      - Reservations
  /reservation/create:
    post:
      consumes:
      - application/json
      description: Membuat reservasi tiket untuk jadwal dan kursi tertentu. Reservasi
        akan memiliki waktu expired untuk konfirmasi
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Reservation creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie-ticket_internal_reservation_module_dto.CreateReservationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Reservation created successfully
          schema:
            allOf:
            - $ref: '#/definitions/internal_reservation_module_handler.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/internal_reservation_module_handler.ReservationResponse'
              type: object
        "400":
          description: Bad Request - Validation error, invalid user ID, schedule ID,
            atau seats
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
        "409":
          description: Conflict - Seats unavailable atau sudah diambil
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_reservation_module_handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Membuat reservasi tiket baru
      tags:
      - Reservations
  /reservation/history:
    get:
      consumes:
      - application/json
      description: Mengambil semua riwayat reservasi yang pernah dibuat oleh user
        yang sedang login
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: History retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mendapatkan riwayat reservasi user
      tags:
      - Reservations
  /schedule:
    get:
      consumes:
      - application/json
      description: Mengambil semua jadwal tayang yang tersedia untuk semua movie
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data jadwal berhasil diambil
          schema:
            $ref: '#/definitions/movie-ticket_internal_schedule_module_dto.MessageResponse'
        "404":
          description: Not Found - Jadwal tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mendapatkan daftar semua jadwal tayang
      tags:
      - Schedules
  /schedule/{id}:
    get:
      consumes:
      - application/json
      description: Mengambil informasi lengkap jadwal tayang berdasarkan ID yang diberikan
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Schedule ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Detail jadwal berhasil diambil
          schema:
            $ref: '#/definitions/movie-ticket_internal_schedule_module_dto.MessageResponse'
        "400":
          description: Bad Request - Invalid schedule ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Jadwal tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mendapatkan detail jadwal berdasarkan ID
      tags:
      - Schedules
  /studio:
    get:
      consumes:
      - application/json
      description: Mengambil informasi studio berdasarkan nama yang diberikan sebagai
        query parameter
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Nama studio yang dicari
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data studio berhasil diambil
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid input atau nama kosong
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Studio tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error - Database error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mencari studio berdasarkan nama
      tags:
      - Studios
  /studio/{id}:
    get:
      consumes:
      - application/json
      description: Mengambil informasi lengkap studio berdasarkan ID yang diberikan
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Studio ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Detail studio berhasil diambil
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request - Invalid studio ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found - Studio tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error - Database error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mendapatkan detail studio berdasarkan ID
      tags:
      - Studios
  /studios:
    get:
      consumes:
      - application/json
      description: Mengambil daftar semua studio yang tersedia di bioskop
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data studio berhasil diambil
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "404":
          description: Not Found - Studio tidak ditemukan
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error - Database error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mendapatkan daftar semua studio
      tags:
      - Studios
swagger: "2.0"
